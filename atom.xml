<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WE ARE YOUNG</title>
  
  <subtitle>山重水复疑无路，柳暗花明又一村</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="liuzxPower.github.io/"/>
  <updated>2019-01-08T09:23:41.601Z</updated>
  <id>liuzxPower.github.io/</id>
  
  <author>
    <name>zexuanliu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图片路径测试</title>
    <link href="liuzxPower.github.io/2019/01/08/%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E6%B5%8B%E8%AF%95/"/>
    <id>liuzxPower.github.io/2019/01/08/图片路径测试/</id>
    <published>2019-01-08T09:05:24.000Z</published>
    <updated>2019-01-08T09:23:41.601Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/alipay.png" alt=""></p><p><img src="/images/git/1.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/alipay.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/git/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>tupian</title>
    <link href="liuzxPower.github.io/2019/01/08/tupian/"/>
    <id>liuzxPower.github.io/2019/01/08/tupian/</id>
    <published>2019-01-08T07:25:15.000Z</published>
    <updated>2019-01-08T09:18:10.975Z</updated>
    
    <content type="html"><![CDATA[<p>sergthgerthygrhy<br><img src="/images/git/1.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img 这是一个新的博客的图片.jpg 这是一个新的博客的图片的说明 %&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;sergthgerthygrhy&lt;br&gt;&lt;img src=&quot;/images/git/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="liuzxPower.github.io/2019/01/08/%E6%B5%8B%E8%AF%95/"/>
    <id>liuzxPower.github.io/2019/01/08/测试/</id>
    <published>2019-01-08T06:59:15.000Z</published>
    <updated>2019-01-08T07:24:37.926Z</updated>
    
    <content type="html"><![CDATA[<p><img src="测试/ceshi.jpg" alt="你想输入的替代文字"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;测试/ceshi.jpg&quot; alt=&quot;你想输入的替代文字&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>haha</title>
    <link href="liuzxPower.github.io/2019/01/06/haha/"/>
    <id>liuzxPower.github.io/2019/01/06/haha/</id>
    <published>2019-01-06T09:40:29.000Z</published>
    <updated>2019-01-07T05:13:39.486Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="电影评论" scheme="liuzxPower.github.io/categories/%E7%94%B5%E5%BD%B1%E8%AF%84%E8%AE%BA/"/>
    
    
      <category term="github" scheme="liuzxPower.github.io/tags/github/"/>
    
      <category term="npm" scheme="liuzxPower.github.io/tags/npm/"/>
    
      <category term="hexo" scheme="liuzxPower.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>你好HEXO</title>
    <link href="liuzxPower.github.io/2019/01/03/%E4%BD%A0%E5%A5%BDHEXO/"/>
    <id>liuzxPower.github.io/2019/01/03/你好HEXO/</id>
    <published>2019-01-03T08:43:34.000Z</published>
    <updated>2019-01-06T09:32:43.665Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GitHub从注册到使用方法</title>
    <link href="liuzxPower.github.io/2019/01/01/GitHub%E4%BB%8E%E6%B3%A8%E5%86%8C%E5%88%B0%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>liuzxPower.github.io/2019/01/01/GitHub从注册到使用方法/</id>
    <published>2019-01-01T09:40:29.000Z</published>
    <updated>2019-01-09T02:24:44.581Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>gitHub是一个面向开源及私有软件项目的托管平台，于2008年4月10日正式上线，除了git代 码仓库托管及基本的 Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其注册用户已经超过350万，托管版本数量也是非常之多，其中不乏知名开源项目 Ruby on Rails、jQuery、python 等。在2018年6月4日，被微软收购后传来的第一个好消息是GitHub 可以免费无限制的为普通用户提供私有仓库服务了，所以还没有注册的小伙伴抓紧跟着这篇文章注册自己的GitHub吧！</p></blockquote><a id="more"></a><h3 id="注册github步骤"><a href="#注册github步骤" class="headerlink" title="注册github步骤"></a>注册github步骤</h3><h4 id="1-打开github官网，进入注册界面-点我注册"><a href="#1-打开github官网，进入注册界面-点我注册" class="headerlink" title="1.打开github官网，进入注册界面 点我注册"></a>1.打开github官网，进入注册界面 点我注册</h4><h4 id="2-我们会看到这个页面"><a href="#2-我们会看到这个页面" class="headerlink" title="2.我们会看到这个页面"></a>2.我们会看到这个页面</h4><p><img src="/images/git/1.jpg" alt="图片"></p><p><strong>Step1</strong>: 这里需要填写昵称（用户名）、注册邮箱和密码</p><p><strong>昵称一栏</strong>:每次在你输入昵称之后，都会检查是否已经被注册。如果被注册了，那么会提示Username is already taken。此时请换另一个昵称进行注册。昵称中只能出现字母、数字、短横线（-），并且短横线不能作为开头头。中文也是不合法昵称。</p><p><strong>邮箱一栏</strong>：要填写合法邮箱，并且是未在GitHub注册过的邮箱。否则会弹出错误提示。</p><p><strong>密码一栏</strong>：注意密码至少有7个字符，其中至少有一个小写字母，至少有一个是数字。</p><p><strong>在三个输入框中的信息都合法之后，它们右边会出现绿色小箭头。此时点击最下方的绿色大按钮来开始注册</strong><br><strong>1.然后有一个图片验证只需要旋转图片使之转到正确的方位就可以了，然后就进入了默认免费模板，什么都不用改，直接点Continue进入step3页面</strong><br><strong>2.step3页面是用户调查页面也可不填然后点击Submit提交会跳到邮箱验证页面</strong><br><strong>3.这里需要进行邮箱验证，此时你刚刚注册用的邮箱会接到一条github官网发送的邮件，打开邮件点击链接即可验证并自动跳回注册完成页面，点击start a project创建仓库。</strong></p><p><strong>点击start a project会进入如下界面：</strong></p><p><img src="/images/git/2.png" alt="图片"></p><blockquote><p>如图，填写仓库名称，写上描述，点击create即可创建,进入创建成功页面</p></blockquote><h4 id="3-安装Git工具-点我下载"><a href="#3-安装Git工具-点我下载" class="headerlink" title="3.安装Git工具 点我下载"></a>3.安装Git工具 点我下载</h4><p>根据计算机及系统选择下载 如图：<br><img src="/images/git/3.jpg" alt="图片"><br>下载完毕按照指示点击next一步一步安装即可</p><h4 id="4-创建一个本地仓库"><a href="#4-创建一个本地仓库" class="headerlink" title="4.创建一个本地仓库"></a>4.创建一个本地仓库</h4><p>在本地创建一个文件夹作为仓库，我创建的是DarkHair，再创建一个文件验证上传操作，如下图：<br><img src="/images/git/4.jpg" alt="图片"></p><h4 id="5-之后在该目录下鼠标右键点击Git-Bash-Here-进入Git命令窗口-如图："><a href="#5-之后在该目录下鼠标右键点击Git-Bash-Here-进入Git命令窗口-如图：" class="headerlink" title="5.之后在该目录下鼠标右键点击Git Bash Here 进入Git命令窗口 如图："></a>5.之后在该目录下鼠标右键点击Git Bash Here 进入Git命令窗口 如图：</h4><p><img src="/images/git/5.jpg" alt="图片"></p><h4 id="6-全局配置一下用户名和邮箱-键入两行命令：git-config-–global-user-name”你自己注册的名字”-和-git-config-–global-user-email”你注册用的邮箱”"><a href="#6-全局配置一下用户名和邮箱-键入两行命令：git-config-–global-user-name”你自己注册的名字”-和-git-config-–global-user-email”你注册用的邮箱”" class="headerlink" title="6.全局配置一下用户名和邮箱 键入两行命令：git config –global user.name”你自己注册的名字” 和 git config –global user.email”你注册用的邮箱”"></a>6.全局配置一下用户名和邮箱 键入两行命令：git config –global user.name”你自己注册的名字” 和 git config –global user.email”你注册用的邮箱”</h4><h4 id="7-接着键入命令git-init初始化一下，生成-git文件，但是这个文件默认隐藏的，查看选中隐藏文件即可看见"><a href="#7-接着键入命令git-init初始化一下，生成-git文件，但是这个文件默认隐藏的，查看选中隐藏文件即可看见" class="headerlink" title="7.接着键入命令git init初始化一下，生成.git文件，但是这个文件默认隐藏的，查看选中隐藏文件即可看见"></a>7.接着键入命令git init初始化一下，生成.git文件，但是这个文件默认隐藏的，查看选中隐藏文件即可看见</h4><h4 id="8-接着键入命令git-status查看当前文件状态-红色箭头所指表示没有提交的文件"><a href="#8-接着键入命令git-status查看当前文件状态-红色箭头所指表示没有提交的文件" class="headerlink" title="8.接着键入命令git status查看当前文件状态 红色箭头所指表示没有提交的文件"></a>8.接着键入命令git status查看当前文件状态 红色箭头所指表示没有提交的文件</h4><h4 id="9-添加提交文件myfirst-txt-键入命令git-add-myfirst-txt或者git-add-两者区别：前者提交指定的文件，后者提交当前目录所有文件-注意-之前要有空格-到此，发现myfirst-txt由红色变味了深绿色-说明该文件已经提交到本地仓储"><a href="#9-添加提交文件myfirst-txt-键入命令git-add-myfirst-txt或者git-add-两者区别：前者提交指定的文件，后者提交当前目录所有文件-注意-之前要有空格-到此，发现myfirst-txt由红色变味了深绿色-说明该文件已经提交到本地仓储" class="headerlink" title="9.添加提交文件myfirst.txt,键入命令git add myfirst.txt或者git add . 两者区别：前者提交指定的文件，后者提交当前目录所有文件[注意 .之前要有空格] 到此，发现myfirst.txt由红色变味了深绿色 说明该文件已经提交到本地仓储"></a>9.添加提交文件myfirst.txt,键入命令git add myfirst.txt或者git add . 两者区别：前者提交指定的文件，后者提交当前目录所有文件[注意 .之前要有空格] 到此，发现myfirst.txt由红色变味了深绿色 说明该文件已经提交到本地仓储</h4><h4 id="10-生产SSH密钥，键入命令ssh-keygen-t-rsa-C-“你的邮箱”"><a href="#10-生产SSH密钥，键入命令ssh-keygen-t-rsa-C-“你的邮箱”" class="headerlink" title="10.生产SSH密钥，键入命令ssh-keygen -t rsa -C “你的邮箱”"></a>10.生产SSH密钥，键入命令ssh-keygen -t rsa -C “你的邮箱”</h4><h4 id="11-进入上一步产生的目录打开id-rsa-pub-复制里边的内容"><a href="#11-进入上一步产生的目录打开id-rsa-pub-复制里边的内容" class="headerlink" title="11.进入上一步产生的目录打开id_rsa.pub 复制里边的内容"></a>11.进入上一步产生的目录打开id_rsa.pub 复制里边的内容</h4><h4 id="12-打开github添加ssh密钥点击Add-SSH-key提交即可"><a href="#12-打开github添加ssh密钥点击Add-SSH-key提交即可" class="headerlink" title="12.打开github添加ssh密钥点击Add SSH key提交即可"></a>12.打开github添加ssh密钥点击Add SSH key提交即可</h4><h4 id="13-将本地仓库提交到远程仓库"><a href="#13-将本地仓库提交到远程仓库" class="headerlink" title="13.将本地仓库提交到远程仓库"></a>13.将本地仓库提交到远程仓库</h4><p>打开github 找到自己创建的第一个仓库并打开，复制ssh地址</p><h4 id="14-键入命令git-remote-add-origin-“刚刚复制的ssh地址”"><a href="#14-键入命令git-remote-add-origin-“刚刚复制的ssh地址”" class="headerlink" title="14.键入命令git remote add origin “刚刚复制的ssh地址”"></a>14.键入命令git remote add origin “刚刚复制的ssh地址”</h4><p>再键入命令git commit -m “这里写描述，也可以不写”,最后执行命令git push -u origin master进行远程仓库提交 需要输入用户名和密码确认</p><h4 id="15-以上操作完毕再打开github，进入到刚刚的仓库便可以看见我们刚刚提交上来的文件了"><a href="#15-以上操作完毕再打开github，进入到刚刚的仓库便可以看见我们刚刚提交上来的文件了" class="headerlink" title="15.以上操作完毕再打开github，进入到刚刚的仓库便可以看见我们刚刚提交上来的文件了"></a>15.以上操作完毕再打开github，进入到刚刚的仓库便可以看见我们刚刚提交上来的文件了</h4>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;gitHub是一个面向开源及私有软件项目的托管平台，于2008年4月10日正式上线，除了git代 码仓库托管及基本的 Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其注册用户已经超过350万，托管版本数量也是非常之多，其中不乏知名开源项目 Ruby on Rails、jQuery、python 等。在2018年6月4日，被微软收购后传来的第一个好消息是GitHub 可以免费无限制的为普通用户提供私有仓库服务了，所以还没有注册的小伙伴抓紧跟着这篇文章注册自己的GitHub吧！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="github" scheme="liuzxPower.github.io/categories/github/"/>
    
    
      <category term="github" scheme="liuzxPower.github.io/tags/github/"/>
    
  </entry>
  
</feed>
